local MSG_INTERACT 				= hash( "interact" )
local MSG_TRIGGER_COLLISION 	= hash( "trigger_response" ) 
local MSG_SET_PROPS 			= hash( "setProps" )

go.property( "locked", true )
go.property( "type", 0 )
go.property( "item", 0 )


-- helpers -------------------
local function newPwdUI( self, isOk )
	local pos = go.get_position()
	local id = factory.create( "/factories#passwordfactory", pos, nil, {
		solved = isOk or false
	})

	return id
end


local function removePwdUI( self )
	go.delete( self.pwdObj )
	self.pwdObj = nil
end


local function open( self )
	if not self.animating then
		self.animating = true

		sprite.play_flipbook( "#sprite", "open", function() 
			self.animating = false
			self.locked = false
			sprite.play_flipbook( "#sprite", "opened" )
			removePwdUI( self )
		end )
	end
end


local function enterPwd( self, isOk ) 
	-- set pwd challenge as solved or not
	local url = msg.url( nil, self.pwdObj, "script" )
	go.set( url, "solved", isOk or false )
	
	-- inform pwd UI to type
	msg.post( self.pwdObj, MSG_INTERACT )
	
	-- after typing, exec action
	timer.delay( 1, false, function() 
		if isOk then open( self ) end
	end )
end


-- methods --------------------
function init( self )
end


function on_message( self, message_id, message, sender )
	if message_id == MSG_INTERACT then
		if self.pwdObj then enterPwd( self, true ) end

	elseif message_id == MSG_TRIGGER_COLLISION then
		if message.enter then
			if self.locked then self.pwdObj = newPwdUI( self ) end
		else
			if self.pwdObj then removePwdUI( self ) end
		end	

	elseif message_id == MSG_SET_PROPS then
		self.name 	= message.name
		self.locked = message.properties.locked
		self.type 	= message.properties.type
		self.item 	= message.properties.item
	end
end

