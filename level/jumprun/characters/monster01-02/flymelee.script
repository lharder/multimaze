local lua = require( "deflibs.lualib" )

go.property( "dir", vmath.vector3( 1, 0, 0 ) )
go.property( "speed", 100 )
go.property( "isLocalHero", false )


local MODE_IDLE = 0
local IMPENETRABLE = { 29 }


local function isImpenetrable( xPix, yPix )
	return ( not MAP:isInBounds( xPix, yPix ) ) or
		   lua.contains( IMPENETRABLE, MAP:getTileValue( xPix, yPix ) ) 
end


local function selectIdlePos()
	local pos = go.get_position()
	pos.x = pos.x + ( 3 * math.random( -40, 40 ) )
	pos.y = pos.y + ( 3 * math.random( -40, 40 ) )
	
	return pos
end



local function updateBrain( self, dt )
	if PLAYER_ID ~= "" then 

		if self.mode == MODE_IDLE then
			self.pos = go.get_position()
			self.dir = vmath.normalize( self.targetPos - self.pos )
			self.pos.x = self.pos.x + self.dir.x * self.speed * dt
			self.pos.y = self.pos.y + self.dir.y * self.speed * dt

			sprite.set_hflip( "#sprite", self.dir.x > 0 )

			if lua.approximates( self.pos.x, self.targetPos.x, 5 ) and 
			lua.approximates( self.pos.y, self.targetPos.y, 5 ) then
				self.targetPos = selectIdlePos()
			end
		end

		if isImpenetrable( self.pos.x, self.pos.y ) then
			self.targetPos = selectIdlePos()
		else
			go.set_position( self.pos )
		end
	end
end


local function updateDrone( self, dt )
	pprint( "nix...." )
end


local function setup( self, message ) 
	if self.isLocalHero then 
		-- make globally available and start syncing
		local gid = message.name
		local cid = go.get_id()
		GAME.client.registry:set( gid, cid )
		GAME:sync( gid ) 
	end
end



-- lifecycle methods ------------------------------
function init( self )
	go.set_scale( .5 )

	local pos = go.get_position()
	go.set_position( vmath.vector3( pos.x, pos.y, .4 ) )

	self.mode = MODE_IDLE
	self.pos = go.get_position()
	self.targetPos = selectIdlePos()

	if self.isLocalHero then 
		self.updateFunc = updateBrain
	else
		self.updateFunc = updateDrone
	end
end


function update( self, dt ) 
	self.updateFunc( self, dt )
end


function on_message( self, message_id, message, sender )
	if message_id == MSG_SET_PROPS then
		setup( self, message )
	end
end

